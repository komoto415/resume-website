{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ClassComponentsComponent = /*#__PURE__*/(() => {\n  class ClassComponentsComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  ClassComponentsComponent.ɵfac = function ClassComponentsComponent_Factory(t) {\n    return new (t || ClassComponentsComponent)();\n  };\n\n  ClassComponentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClassComponentsComponent,\n    selectors: [[\"app-class-components\"]],\n    decls: 32,\n    vars: 0,\n    consts: [[1, \"\"], [\"href\", \"https://github.com/komoto415/COSC2329\"]],\n    template: function ClassComponentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Learning how to Conform with Design\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"p\");\n        i0.ɵɵtext(4, \" Up until now, projects were fairly straight forward. As far as design constraints were concerned, all there was to it was a simple interface. However, problems weren\\u2019t complex enough to have lots of different forms of implementation nor were we seeking any kind of optimisations. Although some testing practices existed prior to this class, Components would be the first class to try and promote the usage of unit tests and for students to begin writing their own test cases for assignments. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"h5\");\n        i0.ɵɵtext(7, \"Dominoes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \" The stand out assignments from this class was Dominoes part 1 and 2. The main arc of them could be simplified into one question: How do we comply with a client's representation of a concept that we developed, and use it with our representation of the same concept? In other words, how do we as the developers of the program/interface contend with this mismatch of concept representation? In essence that's what Dominoes was; lots different ways of representing the same concept interfacing and translating between different client facing representations of the domino concept. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h5\");\n        i0.ɵɵtext(11, \"Ambiguous Ambiguity \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13, \" Though this does seem to be the assignment that many alumni of the class remember, the heart of this class, I believe, was in all of its weirdness and how it leans on ambiguity. Assignment handouts were often times left short on information, documented poorly or in unhelpful ways and once asked for the incorrect formatting on deliverables. Intentionally. This was especially terrifying because you had one submission and no ones tests to run against except if you had made your own. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15, \" Some students found it frustrating which I can understand, but like no other class before it, Components was designed to reward those who took the time to read the assignment sheets early and to spending time looking for potential errors, inconsistencies and/or short comings. If you didn't, the difference between getting a 50 and a 100 might as well have been a coin flip. Like no other class before it makes you appreciate good documentation and well-formed specifications in documentation. But, though perhaps more due to the nature of the assignment concepts, it really forced you to come up with \");\n        i0.ɵɵelementStart(16, \"strong\");\n        i0.ɵɵtext(17, \"good\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18, \" clarifying questions and better ways to clearly articulate your point. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" With the combination of assignments and professor, Components is easily one of my favourite classes in university and comes to be one of the closest we get to learning about \");\n        i0.ɵɵelementStart(21, \"strong\");\n        i0.ɵɵtext(22, \"design\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" principles and the \");\n        i0.ɵɵelementStart(24, \"strong\");\n        i0.ɵɵtext(25, \"limitations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26, \" of that design outside of our Software Engineering class. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \" Click \");\n        i0.ɵɵelementStart(29, \"a\", 1);\n        i0.ɵɵtext(30, \"here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31, \" if you'd like to check out my GitHub repository of all my Components assignments. \");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\".edu[_ngcontent-%COMP%]{min-width:100%!important;background-color:#474e61}.col-md.education[_ngcontent-%COMP%]{padding:0 15px;margin-bottom:15px}.clazz[_ngcontent-%COMP%]{cursor:pointer;text-decoration:underline!important}.clazz[_ngcontent-%COMP%]:hover{color:#8ea7bd}.card[_ngcontent-%COMP%]{font-size:12px}h5[_ngcontent-%COMP%]{font-size:16px}h6[_ngcontent-%COMP%], #school[_ngcontent-%COMP%]{font-size:14px}.card-header[_ngcontent-%COMP%]{padding:10px 15px}.card-body[_ngcontent-%COMP%]{padding:15px}.card-body[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%], .card-body[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%]{margin-bottom:5px}@media screen and (min-width: 480px){.card[_ngcontent-%COMP%]{font-size:14px}h5[_ngcontent-%COMP%]{font-size:20px}h6[_ngcontent-%COMP%], #school[_ngcontent-%COMP%]{font-size:16px}}@media screen and (min-width: 540px){.card[_ngcontent-%COMP%]{font-size:16px}h5[_ngcontent-%COMP%]{font-size:20px}h6[_ngcontent-%COMP%], #school[_ngcontent-%COMP%]{font-size:18px}}\", \"\"]\n  });\n  return ClassComponentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}