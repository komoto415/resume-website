{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../projects.service\";\nimport * as i2 from \"src/app/home/resume/technical-skills/technical-skills.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction ProjectControllerComponent_label_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"label\", 15);\n    i0.ɵɵlistener(\"click\", function ProjectControllerComponent_label_11_Template_label_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.isChecked($event);\n    });\n    i0.ɵɵelement(1, \"input\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", tag_r1, \" \");\n  }\n}\n\nexport let ProjectControllerComponent = /*#__PURE__*/(() => {\n  class ProjectControllerComponent {\n    constructor(projectsService, technicalSkillsService) {\n      this.projectsService = projectsService;\n      this.technicalSkillsService = technicalSkillsService;\n      this.tagEmitter = new EventEmitter();\n      this.titleEmitter = new EventEmitter();\n      this.FADE_IN_CLASS = \"fade-in\";\n      this.FADE_OUT_CLASS = \"fade-out\";\n      this.tags = this.projectsService.getAllUniqueTags().sort();\n      this.tagsInView = this.projectsService.getAllUniqueTags().sort();\n      this.tagQuery = \"\";\n\n      if (this.technicalSkillsService.technicalSkill != null) {\n        this.tagQuery = this.technicalSkillsService.technicalSkill;\n      }\n    }\n\n    ngOnInit() {// console.log(\"at init\");\n    }\n\n    ngOnChanges(changes) {\n      // console.log(\"at changes\");\n      let oldTags = changes.tagsInView.previousValue;\n      let newTags = changes.tagsInView.currentValue;\n      let firstTimeHere = oldTags == null && this.technicalSkillsService.technicalSkill != null;\n\n      if (firstTimeHere) {\n        // console.log(\"need to activate a button\");\n        let checkBoxContainer = document.getElementById(\"tagCheckboxes\");\n        let navigatedBySkillClick = newTags != null && newTags.length !== this.tags.length;\n\n        if (navigatedBySkillClick) {\n          checkBoxContainer.classList.add(\"show\");\n        }\n\n        let checkBoxLabels = checkBoxContainer.getElementsByTagName(\"LABEL\"); // console.log(checkBoxDiv);\n\n        for (let i = 0; i < checkBoxLabels.length; i++) {\n          let label = checkBoxLabels[i];\n          let tag = label.textContent.trim(); // console.log(tag);\n\n          let foundTag = tag === this.tagQuery;\n\n          if (foundTag) {\n            // console.log(\"Found the button\");\n            label.classList.add(\"active\");\n            let input = label.getElementsByTagName(\"INPUT\")[0]; // console.log(input.checked);\n\n            input.checked = true;\n          }\n        }\n\n        this.updateTags(this.technicalSkillsService.technicalSkill, \"\"); // console.log(this.tagQuery);\n      }\n\n      let noQuery = newTags == null;\n      if (noQuery) return;\n      setTimeout(() => {\n        // console.log(newTags);\n        let hideMe = this.tags.filter(e => !newTags.includes(e)); // console.log(hideMe);\n\n        let checkBoxDiv = document.getElementById(\"tagCheckboxes\").getElementsByTagName(\"LABEL\"); // console.log(checkBoxDiv);\n\n        for (let i = 0; i < checkBoxDiv.length; i++) {\n          let label = checkBoxDiv[i];\n          let tag = label.textContent.trim(); // console.log(tag);\n\n          let labelClasses = label.classList; // console.log(labelClasses)\n\n          let foundTagToHide = hideMe.includes(tag);\n\n          if (foundTagToHide) {\n            labelClasses.remove(this.FADE_IN_CLASS);\n            labelClasses.add(this.FADE_OUT_CLASS);\n          } else {\n            labelClasses.remove(this.FADE_OUT_CLASS);\n            labelClasses.add(this.FADE_IN_CLASS);\n          }\n        }\n      }, this.technicalSkillsService.technicalSkill == null ? 500 : 0);\n    }\n\n    isChecked($event) {\n      let label = $event.target; // console.log(label.childNodes);\n\n      let input = label.childNodes[0]; // console.log(input.checked);\n\n      let checkboxChecked = !input.checked;\n      let tag = label.childNodes[1].data.trim();\n\n      if (checkboxChecked) {\n        // console.log(\"I've been checked! C:\")\n        // label.classList\n        this.updateTags(tag, \"checked\");\n      } else {\n        // console.log(\"I've been unchecked! :C\")\n        this.updateTags(this.tagQuery.replace(this.tagQuery.split(\"\").length == 0 ? tag.concat(\" \") : tag, \"\").trim(), \"\");\n      } // console.log(check);\n      // console.log(tag);\n\n    }\n\n    clearForm($event) {\n      let controllerDiv = $event.target.parentNode.parentNode.parentNode; // console.log(controllerDiv);\n\n      let inputNodes = controllerDiv.getElementsByTagName(\"INPUT\"); // console.log(inputNodes.length);\n\n      for (let i = 0; i < inputNodes.length; i++) {\n        let node = inputNodes[i]; // console.log(node);\n\n        switch (node.type) {\n          case \"text\":\n            node.value = \"\";\n            break;\n\n          case \"radio\":\n            node.checked = false;\n            break;\n\n          case \"checkbox\":\n            // console.log(node.checked);\n            if (node.checked) {\n              node.checked = false;\n              let label = node.parentNode; // console.log(label);\n\n              label.classList.remove(\"active\");\n            }\n\n            break;\n        }\n      }\n\n      this.updateTitle(\"\");\n      this.updateTags(\"\", \"\");\n    }\n\n    updateTitle(value) {\n      this.titleQuery = value.toLowerCase().trim(); // console.log(this.titleQuery);\n\n      this.titleEmitter.emit(this.titleQuery);\n    }\n\n    updateTags(value, method) {\n      let val = value.toLowerCase().trim();\n      let updatedByCheckbox = method === \"checked\";\n\n      if (updatedByCheckbox) {\n        this.tagQuery += `${this.tagQuery.length == 0 ? \"\" : \" \"}${val}`;\n      } else {\n        this.tagQuery = val;\n      } // console.log(this.tagQuery);\n\n\n      this.tagEmitter.emit(this.tagQuery); // console.log(this.projectsControllerService.selectedTags);\n      // this.projectsControllerService.selectedTags = this.tagQuery;\n      // console.log(this.projectsControllerService.selectedTags);\n    }\n\n  }\n\n  ProjectControllerComponent.ɵfac = function ProjectControllerComponent_Factory(t) {\n    return new (t || ProjectControllerComponent)(i0.ɵɵdirectiveInject(i1.ProjectsService), i0.ɵɵdirectiveInject(i2.TechnicalSkillsService));\n  };\n\n  ProjectControllerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProjectControllerComponent,\n    selectors: [[\"app-project-controller\"]],\n    inputs: {\n      tagsInView: \"tagsInView\"\n    },\n    outputs: {\n      tagEmitter: \"tagEmitter\",\n      titleEmitter: \"titleEmitter\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"controller\"], [1, \"text-center\"], [\"id\", \"filterControl\", \"href\", \"#tagCheckboxes\", \"data-toggle\", \"collapse\", \"role\", \"button\", \"aria-expanded\", \"false\", \"aria-controls\", \"tagCheckboxes\"], [\"id\", \"searchHeader\"], [2, \"margin-left\", \"10px\"], [1, \"fas\", \"fa-filter\", \"fa-align-right\", \"fa-lg\"], [\"id\", \"tagCheckboxes\", 1, \"collapse\"], [1, \"row\", \"justify-content-start\"], [1, \"tag-wrapper\"], [\"data-toggle\", \"buttons\", 1, \"btn-group-toggle\"], [\"class\", \"btn btn-secondary tagCheckboxLabel fade-in\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"justify-content-center\", 2, \"margin\", \"15px\"], [1, \"btn\", \"btn-info\", \"btn-sm\", 3, \"click\"], [\"id\", \"filterControl\", \"href\", \"#tagCheckboxes\", \"data-toggle\", \"collapse\", \"role\", \"button\", \"aria-expanded\", \"false\", \"aria-controls\", \"tagCheckboxes\", 1, \"align-middle\", \"text-right\"], [1, \"fas\", \"fa-minus\", \"fa-2x\"], [1, \"btn\", \"btn-secondary\", \"tagCheckboxLabel\", \"fade-in\", 3, \"click\"], [\"type\", \"checkbox\", \"autocomplete\", \"off\"]],\n    template: function ProjectControllerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2)(3, \"span\", 3);\n        i0.ɵɵtext(4, \"Filter projects by their tags!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵelement(6, \"i\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 9);\n        i0.ɵɵtemplate(11, ProjectControllerComponent_label_11_Template, 3, 1, \"label\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 11)(13, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ProjectControllerComponent_Template_button_click_13_listener($event) {\n          return ctx.clearForm($event);\n        });\n        i0.ɵɵtext(14, \"Clear Inputs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 13)(16, \"span\", 4);\n        i0.ɵɵelement(17, \"i\", 14);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n      }\n    },\n    directives: [i3.NgForOf],\n    styles: [\".navbar[_ngcontent-%COMP%]{background-color:#3b3b69;height:60px}.navbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]   span.navbar-item[_ngcontent-%COMP%]:hover{text-decoration:none!important;color:#007bff!important}.navbar-brand[_ngcontent-%COMP%]{font-size:20px!important}@media screen and (max-width: 420px){.navbar-item[_ngcontent-%COMP%]{display:none}}.navbar-brand[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:24px!important}.navbar-brand[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{color:#f0f8ff!important}.content[_ngcontent-%COMP%], .project-content[_ngcontent-%COMP%]{margin:0}.wrapper[_ngcontent-%COMP%]{margin:30px 4rem;min-height:calc(100vh - 236px)}@media screen and (max-width: 480px){.wrapper[_ngcontent-%COMP%]{margin-left:30px;margin-right:30px}}@media screen and (min-width: 480px){.content[_ngcontent-%COMP%], .project-content[_ngcontent-%COMP%]{margin:0 2vw}}.hide[_ngcontent-%COMP%]{display:none}.controller[_ngcontent-%COMP%]{margin:0 5vw 30px}.controller[_ngcontent-%COMP%]   #searchHeader[_ngcontent-%COMP%]{font-size:1.15rem;text-align:center}.card-columns[_ngcontent-%COMP%], .controller[_ngcontent-%COMP%]{font-size:75%}label.tagCheckBox[_ngcontent-%COMP%]{font-size:70%}@media screen and (min-width: 480px){.controller[_ngcontent-%COMP%]   #searchHeader[_ngcontent-%COMP%]{font-size:1.3rem}.card-columns[_ngcontent-%COMP%], .controller[_ngcontent-%COMP%]{font-size:80%}label.btn.btn-secondary.tagCheckbox[_ngcontent-%COMP%]{font-size:75%!important}}@media screen and (min-width: 800px){.controller[_ngcontent-%COMP%]   #searchHeader[_ngcontent-%COMP%]{font-size:1.4rem}.card-columns[_ngcontent-%COMP%], .controller[_ngcontent-%COMP%]{font-size:90%}label.btn.btn-secondary.tagCheckbox[_ngcontent-%COMP%]{font-size:85%!important}}@media screen and (min-width: 1000px){.controller[_ngcontent-%COMP%]   #searchHeader[_ngcontent-%COMP%]{font-size:24px}.card-columns[_ngcontent-%COMP%], .controller[_ngcontent-%COMP%]{font-size:100%}label.btn.btn-secondary.tagCheckbox[_ngcontent-%COMP%]{font-size:90%!important}}.tagCheckboxLabel[_ngcontent-%COMP%]{margin:5px 10px}.fade-in[_ngcontent-%COMP%]{animation:fadeIn ease 1s;-webkit-animation:fadeIn ease 1s;-moz-animation:fadeIn ease 1s;-o-animation:fadeIn ease 1s;-ms-animation:fadeIn ease 1s;opacity:1;height:inherit;width:inherit}@keyframes fadeIn{0%{opacity:0;height:0px;width:0px;overflow:hidden}to{opacity:1;height:inherit;width:inherit}}@-webkit-keyframes fadeIn{0%{opacity:0;height:0px;width:0px;overflow:hidden}to{opacity:1;height:inherit;width:inherit}}.fade-out[_ngcontent-%COMP%]{animation:fadeOut ease 1s;-webkit-animation:fadeOut ease 1s;-moz-animation:fadeOut ease 1s;-o-animation:fadeOut ease 1s;-ms-animation:fadeOut ease 1s;position:absolute;overflow:hidden;height:0px;width:0px;padding:0;margin:0;border:0px}@keyframes fadeOut{0%{position:relative;opacity:1;height:inherit;width:inherit}to{overflow:hidden;position:absolute;opacity:0;height:0px;width:0px;padding:0;margin:0;border:0px}}@-webkit-keyframes fadeOut{0%{position:relative;opacity:1;height:inherit;width:inherit}to{position:absolute;overflow:hidden;opacity:0;height:0px;width:0px;padding:0;margin:0;border:0px}}.tag[_ngcontent-%COMP%]{font-size:80%;opacity:.7}a[_ngcontent-%COMP%]:hover{text-decoration:none!important;cursor:pointer}a[_ngcontent-%COMP%]:hover   h5[_ngcontent-%COMP%]{color:#59affa;text-decoration:underline}\", \"label[_ngcontent-%COMP%]{text-align:right;font-size:115%}#tagCheckboxes[_ngcontent-%COMP%], .controller[_ngcontent-%COMP%]{padding-left:20px;padding-right:20px;background-color:#3b3b69}.controller[_ngcontent-%COMP%]{padding-top:20px;padding-bottom:20px}.filter[_ngcontent-%COMP%]{width:70%;background-color:transparent;border-width:0 0 2px 0;border-style:solid;border-color:#f0f8ff;color:#b8deff}.filter[_ngcontent-%COMP%]::-moz-placeholder{color:#b8deff;opacity:.6}.filter[_ngcontent-%COMP%]::placeholder{color:#b8deff;opacity:.6}.filter[_ngcontent-%COMP%]:-ms-input-placeholder{color:#b8deff;opacity:.6}.filter[_ngcontent-%COMP%]::-ms-input-placeholder{color:#b8deff;opacity:.6}.filter[_ngcontent-%COMP%]:focus{outline-width:0;caret-color:#f0f8ff}#filterControl[_ngcontent-%COMP%]{color:#b0daff}#filterControl[_ngcontent-%COMP%]:hover{text-decoration:none}#searchHeader[_ngcontent-%COMP%]{color:#f0f8ff}@media screen and (min-width: 700px){#projectSearch[_ngcontent-%COMP%]{width:55%}}.btn[_ngcontent-%COMP%]:focus{outline:none;box-shadow:none}.btn-secondary[_ngcontent-%COMP%], .btn-secondary[_ngcontent-%COMP%]:hover, .btn-secondary[_ngcontent-%COMP%]:active, .btn-secondary[_ngcontent-%COMP%]:visited, .btn-secondary[_ngcontent-%COMP%]:focus{background-color:#4a4a80!important;border-color:#4a4a80!important}.btn-secondary.active[_ngcontent-%COMP%], .btn-secondary.active[_ngcontent-%COMP%]:hover, .btn-secondary.active[_ngcontent-%COMP%]:active, .btn-secondary.active[_ngcontent-%COMP%]:visited, .btn-secondary.active[_ngcontent-%COMP%]:focus{background-color:#1f1f46!important;border-color:#1f1f46!important}.tag-wrapper[_ngcontent-%COMP%]{margin:0 15px}\"]\n  });\n  return ProjectControllerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}